services:
  flaresolverr:
    image: flaresolverr/flaresolverr:${FLARESOLVERR_VERSION}
    container_name: flaresolverr
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${FLARESOLVERR_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/flaresolverr/.env"]
    environment: ["TZ:${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    # depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${HOMARR_PROFILE}"]
    network_mode: host # change to service:${VPN_PROVIDER} if you want in the same network as others
    # sysctls: ["net.ipv6.conf.all.disable_ipv6=1"] # uncomment if changed to service:${VPN_PROVIDER} in network_mode
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/lidarr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_FOLDER}/homarr/config:/config:z
      - ${CONFIG_FOLDER}/homarr/icons:/icons:z
      - ${CONFIG_FOLDER}/homarr/data:/data:z

  jellyfin:
    image: linuxserver/jellyfin:${JELLYFIN_VERSION}
    container_name: jellyfin
    # depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${JELLYFIN_PROFILE}"]
    network_mode: host # change to service:${VPN_PROVIDER} if you want in the same network as others
    # sysctls: ["net.ipv6.conf.all.disable_ipv6=1"] # uncomment if changed to service:${VPN_PROVIDER} in network_mode
    restart: unless-stopped
    # Leave commented unless your machine is capable of Hardware acceleration - Intel / Nvidia
    # More information at; https://github.com/linuxserver/docker-plex#hardware-acceleration
    env_file: [".env", "${CONFIG_FOLDER}/jellyfin/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_FOLDER}/jellyfin/config:/config:z
      - ${MEDIA_FOLDER}/Series:/data/tvshows:z
      - ${MEDIA_FOLDER}/Movies:/data/movies:z

  jellyseerr:
    image: fallenbagel/jellyseerr:${JELLYSEERR_VERSION}
    container_name: jellyseerr
    # depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${JELLYSEERR_PROFILE}"]
    network_mode: host # change to service:${VPN_PROVIDER} if you want in the same network as others
    # sysctls: ["net.ipv6.conf.all.disable_ipv6=1"] # uncomment if changed to service:${VPN_PROVIDER} in network_mode
    restart: unless-stopped
    # Leave commented unless your machine is capable of Hardware acceleration - Intel / Nvidia
    # More information at; https://github.com/linuxserver/docker-plex#hardware-acceleration
    env_file: [".env", "${CONFIG_FOLDER}/jellyfin/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_FOLDER}/jellyseerr/config:/config:z

  lidarr:
    image: linuxserver/lidarr:${LIDARR_VERSION}
    container_name: lidarr
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${LIDARR_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/lidarr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTIFICATES_FOLDER}:/certs:ro
      - ${CONFIG_FOLDER}/lidarr/config:/config:z
      - ${RECYCLE_FOLDER}/lidarr:/recycle:z
      - ${TORRENT_DOWNLOADS_FOLDER}:/downloads/torrent:z
      - ${TORRENT_DOWNLOADS_FOLDER}/completed/Lidarr:/downloads/completed/Lidarr:z
      - ${USENET_DOWNLOADS_FOLDER}:/downloads/usenet:z
      - ${USENET_DOWNLOADS_FOLDER}/completed/Music:/downloads/completed/Music:z
      - ${MEDIA_FOLDER}/Music:/music:z

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    # depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${PLEX_PROFILE}"]
    network_mode: host # change to service:${VPN_PROVIDER} if you want in the same network as others
    # sysctls: ["net.ipv6.conf.all.disable_ipv6=1"] # uncomment if changed to service:${VPN_PROVIDER} in network_mode
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/overseerr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - ${CONFIG_FOLDER}/overseerr/config:/config:z

  plex:
    image: linuxserver/plex:${PLEX_VERSION}
    container_name: plex
    # depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${PLEX_PROFILE}"]
    network_mode: host # change to service:${VPN_PROVIDER} if you want in the same network as others
    # sysctls: ["net.ipv6.conf.all.disable_ipv6=1"] # uncomment if changed to service:${VPN_PROVIDER} in network_mode
    restart: unless-stopped
    # Leave commented unless your machine is capable of Hardware acceleration - Intel / Nvidia
    # More information at; https://github.com/linuxserver/docker-plex#hardware-acceleration
    devices: [ "/dev/dri:/dev/dri" ] # Intel QuickSync
    env_file: [".env", "${CONFIG_FOLDER}/plex/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_FOLDER}/plex/config:/config:z
      - ${CONFIG_FOLDER}/plex/transcode:/transcode:z
      - ${MEDIA_FOLDER}/Series:/data/Series:z
      - ${MEDIA_FOLDER}/Movies:/data/Movies:z
      - ${MEDIA_FOLDER}/Music:/data/Music:z

  protonvpn:
    image: ghcr.io/tprasadtp/protonwire:${PROTONVPN_VERSION}
    container_name: protonvpn
    restart: unless-stopped
    profiles: ["${PROTONVPN_PROFILE}"]
    env_file: [".env", "${CONFIG_FOLDER}/protonvpn/.env"]
    cap_add: [NET_ADMIN]
    sysctls:
      ["net.ipv6.conf.all.disable_ipv6=1", "net.ipv4.conf.all.rp_filter=2"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp:z
    ports:
      - ${FLARESOLVERR_HTTP_PORT}:${FLARESOLVERR_HTTP_PORT} # flaresolverr-http
      - ${LIDARR_HTTP_PORT}:${LIDARR_HTTP_PORT} # lidarr-http
      - ${PROWLARR_HTTP_PORT}:${PROWLARR_HTTP_PORT} # prowlarr-http
      - ${QBITTORRENT_HTTP_PORT}:${QBITTORRENT_HTTP_PORT} # qbittorrent-http
      - ${QBITTORRENT_PORT}:${QBITTORRENT_PORT} # qbittorrent-torrent
      - ${QBITTORRENT_PORT}:${QBITTORRENT_PORT}/udp # qbittorrent-torrent
      - ${RADARR_HTTP_PORT}:${RADARR_HTTP_PORT} # radarr-http
      - ${READARR_HTTP_PORT}:${READARR_HTTP_PORT} # readarr-http
      - ${SONARR_HTTP_PORT}:${SONARR_HTTP_PORT} # sonarr-http
      - ${TAUTULLI_HTTP_PORT}:${TAUTULLI_HTTP_PORT} # tautulli-http

  prowlarr:
    image: linuxserver/prowlarr:${PROWLARR_VERSION}
    container_name: prowlarr
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${PROWLARR_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/prowlarr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTIFICATES_FOLDER}:/certs:ro
      - ${CONFIG_FOLDER}/prowlarr/config:/config:z
      - ${RECYCLE_FOLDER}/prowlarr:/recycle:z
      - ${USENET_BLACKHOLE_FOLDER}:/blackhole:z
      - ${USENET_DOWNLOADS_FOLDER}:/downloads:z
      - ${MEDIA_FOLDER}/AudioBooks:/audiobooks:z
      - ${MEDIA_FOLDER}/Comics:/comics:z
      - ${MEDIA_FOLDER}/eBooks:/ebooks:z
      - ${MEDIA_FOLDER}/Movies:/movies:z
      - ${MEDIA_FOLDER}/Music:/music:z
      - ${MEDIA_FOLDER}/Series:/series:z

  qbittorrent:
    image: linuxserver/qbittorrent:${QBITTORRENT_VERSION}
    container_name: qbittorrent
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${QBITTORRENT_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/qbittorrent/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTIFICATES_FOLDER}:/certs:ro
      - ${CONFIG_FOLDER}/qbittorrent/config:/config:z
      - ${TORRENT_BLACKHOLE_FOLDER}:/blackhole:z
      - ${TORRENT_DOWNLOADS_FOLDER}:/downloads:z
      - ${MEDIA_FOLDER}/AudioBooks:/audiobooks:z
      - ${MEDIA_FOLDER}/eBooks:/books:z
      - ${MEDIA_FOLDER}/Movies:/movies:z
      - ${MEDIA_FOLDER}/Music:/music:z
      - ${MEDIA_FOLDER}/Series:/tv:z

  radarr:
    image: linuxserver/radarr:${RADARR_VERSION}
    container_name: radarr
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${RADARR_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/radarr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTIFICATES_FOLDER}:/certs:ro
      - ${CONFIG_FOLDER}/radarr/config:/config:z
      - ${RECYCLE_FOLDER}/radarr:/recycle:z
      - ${TORRENT_DOWNLOADS_FOLDER}:/downloads/torrent:z
      - ${TORRENT_DOWNLOADS_FOLDER}/completed/Radarr:/downloads/completed/Radarr:z
      - ${USENET_DOWNLOADS_FOLDER}:/downloads/usenet:z
      - ${USENET_DOWNLOADS_FOLDER}/completed/Movies:/downloads/completed/Movies:z
      - ${MEDIA_FOLDER}/Movies:/movies:z

  readarr:
    image: linuxserver/readarr:${READARR_VERSION}
    container_name: readarr
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${READARR_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/readarr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTIFICATES_FOLDER}:/certs:ro
      - ${CONFIG_FOLDER}/readarr/config:/config:z
      - ${RECYCLE_FOLDER}/readarr:/recycle:z
      - ${TORRENT_DOWNLOADS_FOLDER}:/downloads/torrent:z
      - ${TORRENT_DOWNLOADS_FOLDER}/completed/Readarr:/downloads/completed/Readarr:z
      - ${USENET_DOWNLOADS_FOLDER}:/downloads/usenet:z
      - ${USENET_DOWNLOADS_FOLDER}/completed/Readarr:/downloads/completed/eBooks:z
      - ${MEDIA_FOLDER}/AudioBooks:/audiobooks:z
      - ${MEDIA_FOLDER}/Comics:/comics:z
      - ${MEDIA_FOLDER}/eBooks:/books:z

  sonarr:
    image: linuxserver/sonarr:${SONARR_VERSION}
    container_name: sonarr
    depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${SONARR_PROFILE}"]
    network_mode: service:${VPN_PROVIDER}
    sysctls: ["net.ipv6.conf.all.disable_ipv6=1"]
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/sonarr/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CERTIFICATES_FOLDER}:/certs:ro
      - ${CONFIG_FOLDER}/sonarr/config:/config:z
      - ${RECYCLE_FOLDER}/sonarr:/recycle:z
      - ${TORRENT_DOWNLOADS_FOLDER}/completed/Sonarr:/downloads/completed/Sonarr:z
      - ${TORRENT_DOWNLOADS_FOLDER}:/downloads/torrent:z
      - ${USENET_DOWNLOADS_FOLDER}:/downloads/usenet:z
      - ${USENET_DOWNLOADS_FOLDER}/completed/Series:/downloads/completed/Series:z
      - ${MEDIA_FOLDER}/Series:/series:z

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    # depends_on: ["${VPN_PROVIDER}"]
    profiles: ["${TAUTULLI_PROFILE}"]
    network_mode: host # change to service:${VPN_PROVIDER} if you want in the same network as others
    # sysctls: ["net.ipv6.conf.all.disable_ipv6=1"] # uncomment if changed to service:${VPN_PROVIDER} in network_mode
    restart: unless-stopped
    env_file: [".env", "${CONFIG_FOLDER}/tautulli/.env"]
    environment:
      ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
    volumes:
      - ${CONFIG_FOLDER}/tautulli/config:/config:z

#####

#   nextcloud:
#     image: nextcloud
#     container_name: nextcloud
#     restart: unless-stopped
#     networks: 
#       - nextcloud
#     ports:
#       - 8081:80
#     depends_on: ['nextclouddb', 'redis']
#     env_file: [".env", "${CONFIG_FOLDER}/nextcloud/.env"]
#     environment:
#       ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
#     volumes:
#       - ${CONFIG_FOLDER}/nextcloud/html:/var/www/html:z
#       - ${CONFIG_FOLDER}/nextcloud/custom_apps:/var/www/html/custom_apps:z
#       - ${CONFIG_FOLDER}/nextcloud/config:/var/www/html/config:z
#       - ${CONFIG_FOLDER}/nextcloud/data:/var/www/html/data:z

#   nextclouddb:
#     image: mariadb
#     container_name: nextcloud-db
#     restart: unless-stopped
#     command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
#     networks: 
#       - nextcloud
#     env_file: [".env", "${CONFIG_FOLDER}/nextclouddb/.env"]
#     environment:
#       ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
#     volumes:
#       - ${CONFIG_FOLDER}/nextclouddb/data:/var/lib/mysql:z

#   collabora:
#     image: collabora/code
#     container_name: collabora
#     restart: unless-stopped
#     networks: 
#       - nextcloud
#     ports:
#       - 9980:9980
#     env_file: [".env", "${CONFIG_FOLDER}/collabora/.env"]
#     environment:
#       ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]

#   redis:
#     image: redis:alpine
#     container_name: redis
#     restart: unless-stopped
#     networks: 
#       - nextcloud
#     env_file: [".env", "${CONFIG_FOLDER}/redis/.env"]
#     environment:
#       ["PGID=${GID}", "PUID=${UID}", "UMASK=${UMASK}", "TZ=${TIMEZONE}"]
#     volumes:
#       - ${CONFIG_FOLDER}/redis/data:/data:z


# networks:
#   nextcloud:
#     name: nextcloud
#     driver: bridge

